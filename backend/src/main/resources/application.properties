# Application Configuration
spring.application.name=lll-futures-backend
server.port=${PORT:8080}

# Database Configuration - Environment Based
# Local Development (H2)
spring.datasource.url=${DATABASE_URL:jdbc:h2:file:./data/lll_futures_db}
spring.datasource.driverClassName=${DATABASE_DRIVER:org.h2.Driver}
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=${DATABASE_PASSWORD:}

# JPA Configuration
spring.jpa.database-platform=${JPA_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# H2 Console (disabled in production)
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}
spring.h2.console.path=/h2-console

# CORS Configuration - Updated for production
app.cors.allowed-origins=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,https://lll-futures-frontend.onrender.com,https://lll-futures.onrender.com

# Initial Token Balance
app.token.initial-balance=1000.0

# Real Solana Integration - Temporarily using simulation for testing
app.token.real-integration=true

# Logging
logging.level.com.lll=DEBUG
logging.level.org.springframework.web=INFO

# Solana Configuration - Using Ankr RPC
solana.rpc-url=https://rpc.ankr.com/solana_devnet/4272fefe4917fe6adf166b4fbd7ab2f17f5dac1cb044db6acf35bfec71f894fd
solana.token-mint=8ynUJf6w6FMgAknquPXRciK5kvV1Qs1FML94q8GzMsw2
solana.program-id=HxgjgoACfB5CaNY6H7ghiDAG9ZShAMxfgRKuxEHNVMN2

# Vault Wallet Configuration
# This is the master wallet that holds tokens for distribution
app.vault.public-key=${VAULT_PUBLIC_KEY:8JoNvVbo7Q6hz2x9xmYaisxvEerKKtEyigygw28D7fzq}
app.vault.encrypted-private-key=${VAULT_ENCRYPTED_PRIVATE_KEY:}

# Wallet Encryption Key (change this in production!)
app.wallet.encryption-key=${WALLET_ENCRYPTION_KEY:lll-futures-secure-key-2024}

# Storage Configuration - Environment Based
# Local Development (File System)
storage.type=${STORAGE_TYPE:local}
storage.local.path=${LOCAL_STORAGE_PATH:./uploads}

# Production (Cloudflare R2)
storage.r2.endpoint=${R2_ENDPOINT:}
storage.r2.access-key=${R2_ACCESS_KEY:}
storage.r2.secret-key=${R2_SECRET_KEY:}
storage.r2.bucket=${R2_BUCKET:}
storage.r2.region=${R2_REGION:auto}

# JWT Configuration
jwt.secret=${JWT_SECRET:lll-futures-secret-key-must-be-at-least-256-bits-please-change-in-production-this-is-a-very-long-secret-key-for-security-purposes-change-this-in-production}
jwt.expiration=86400000

# Market Creation Limits
app.market.creation.max-per-day=${MARKET_MAX_PER_DAY:1}
app.market.creation.min-balance=${MARKET_MIN_BALANCE:50.0}

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}

# Frontend URL for OAuth redirects
frontend.url=${FRONTEND_URL:http://localhost:3000}
